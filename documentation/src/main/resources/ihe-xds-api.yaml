openapi: 3.0.0
info:
  title: ihe-xds-api
  description: API til integration og test af IHE XDS infrastruktur
  version: "1.0.0"
  contact:
    email: development@kvalitetitsit.dk
tags:
  - name: ihe-xds-api
    description: Ihe Xds Api

servers:
  - url: '{protocol}://{environment}:{port}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      environment:
        enum:
          - localhost # Docker-compose setup
        default: localhost # Development
      port:
        enum:
          - 8080
        default: 8080
paths:
  /v1/iti18:
    post:
      tags:
        - IHEXDS
      summary: search XDS as a healthcare professional
      description: search XDS as a healthcare professional
      requestBody:
        description: Your name
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iti18Request'
      responses:
        '200':
          description: Ok with list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/iti18Response'

  /v1/codes/classCode:
    get:
      tags:
        - Class codes
      summary: Get class code and name of class code
      description: Get class code and name of class code
      responses:
        '200':
          description: Ok with list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code'

  /v1/codes/availabilityStatusCode:
    get:
      tags:
        - Availability codes
      summary: Get code and name of availability
      description: Get code and name of availability
      responses:
        '200':
          description: Ok with list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code'

  /v1/codes/formatCode:
    get:
      tags:
        - Format codes
      summary: Get code and name of format codes
      description: Get code and name of format codes
      responses:
        '200':
          description: Ok with list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code'
  /v1/codes/healthCareFacilityType:
    get:
      tags:
        - Health Care Facility Type Codes
      summary: Get code and name of healthCareFacilityType codes
      description: Get code and name of healthCareFacilityType codes
      responses:
        '200':
          description: Ok with list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code'

  /v1/codes/practiceSettingCode:
    get:
      tags:
        - Practice setting code
      summary: Get code and name of practiceSettingCode
      description: Get code and name of practiceSettingCode
      responses:
        '200':
          description: Ok with list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code'

  /v1/codes/objectTypeCode:
    get:
      tags:
        - Object type code
      summary: Get code and name of objectType
      description: Get code and name of objectType
      responses:
        '200':
          description: Ok with list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code'

  /v1/codes/eventCode:
    get:
      tags:
        - Event code
        - Event code scheme
      summary: Get code and name of event code and scheme
      description: Get code and name of event code and scheme
      responses:
        '200':
          description: Ok with list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code'

  /v1/codes/typeCode:
    get:
      tags:
        - Type code
      summary: Get code and name of type code and scheme
      description: Get code and name of type code and scheme
      responses:
        '200':
          description: Ok with list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code'

components:
  responses:
    '400':
      description: "Bad Request. This could be because: * One of the required parameters/properties are missing or is empty <br> * Length of input is exceeding maximum length <br> (See a possible detailed error message in the in the response.)"
    '401':
      description: "Unauthorized. This could be because: <br> * The calling system has not been properly authenticated."
    '403':
      description: "Forbidden. This could be because: <br> * The requested information does not belong the organisation of the user <br> * The calling user does not have the required roles"
  schemas:
    iti18Response:
      type: object
      required:
        - patientId
        - documentId
      properties:
        patientId:
          description: Patientens Id (CPR)
          type: string
          nullable: false
          example: "2512489996"
        documentId:
          description: Dokumentets Id
          type: string
          nullable: false
          example: "987598435735.54587493.454353"
    code:
      type: object
      required:
        - name
        - code
      properties:
        name:
          description: The name of the code
          type: string
          example: "Clinical report"
        code:
          description: The code value
          type: string
          example: "001"
        scheme:
          description: the scheme for the code
          type: string
          example: "1.2.208.184.100.10"

    healthcareProfessionalContext:
      type: object
      required:
        - actingUserId
        - authorizationCode
        - consentOverride
      properties:
        actingUserId:
          description: The id of the person making the request
          type: string
          example: "2512489996"
        responsibleUserId:
          description: The id of the person responsible for the request (if different from actingUserId)
          type: string
          example: "2512489996"
        authorizationCode:
          description: The doctor authrization for the person responseible for the request
          type: string
          example: "CX8324"
        consentOverride:
          description: 'Break the glass'
          type: boolean
          example: "false"
        organisationCode:
          description: The code of the organisation where the responsible is located
          type: string
          example: "7879798789"

    iti18QueryParameter:
      type: object
      required:
        - patientId
        - availabilityStatus
      properties:
        patientId:
          description: Patientens Id (CPR)
          type: string
          example: "2512489996"
        typeCode:
          description: Type Code
          $ref: '#/components/schemas/codeQuery'
        formatCode:
          description: Format Code
          $ref: '#/components/schemas/codeQuery'
        healthcareFacilityTypeCode:
          description: Healthcare facility code
          $ref: '#/components/schemas/codeQuery'
        eventCode:
          description: Event Code
          $ref: '#/components/schemas/codeQuery'
        practiceSettingCode:
          description: Practice setting code
          $ref: '#/components/schemas/codeQuery'
        documentType:
          description: Document type
          type: array
          items:
            type: string
        startFromDate:
          description: The start service from date-time
          type: string
          format: date-time
          example: "2021-01-30T08:30:00Z"
        startToDate:
          description: The start service to date-time
          type: string
          format: date-time
          example: "2021-01-30T08:30:00Z"
        endFromDate:
          description: The end service from date-time
          type: string
          format: date-time
          example: "2021-01-30T08:30:00Z"
        endToDate:
          description: The end service to date-time
          type: string
          format: date-time
          example: "2021-01-30T08:30:00Z"
        availabilityStatus:
          description: The availability result
          type: string



    iti18Request:
      type: object
      required:
        - queryParameters
        - credentialId
        - context
      properties:
        queryParameters:
          description: query parameters related to iti-18 query
          $ref: '#/components/schemas/iti18QueryParameter'
        credentialId:
          description: The credential to use (identified by id)
          type: string
          example: "credentialid"
        context:
          description: the context in which to make the query
          $ref: '#/components/schemas/healthcareProfessionalContext'

    codeQuery:
      type: object
      required:
        - code
        - codeScheme
      properties:
        code:
          description: Code value from the search query
          type: string
          example: "74468-0"
        codeScheme:
          description: Code scheme from the search query
          type: string
          example: "2.16.840.1.113883.6.1"